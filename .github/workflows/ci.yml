name: Continuous Integration
on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]
jobs:
  review:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: SetupSbt
        uses: olafurpg/setup-scala@v5
      - name: StaticAnalysis
        run: sbt clean scalafmtCheck test:scalafmtCheck scalafmtSbtCheck scapegoat
      - name: Tests
        run: sbt clean coverage test coverageReport coverageAggregate
  publish:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    env:
      CI: true
      BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
      BINTRAY_PASS: ${{ secrets.BINTRAY_PASS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: SetupSbt
        uses: olafurpg/setup-scala@v5
        with:
          java-version: adopt@1.11
      - name: PublishToBintray
        run: sbt releaseEarly
      - name: PublishToDockerHub
        run: |
          sbt docker:publishLocal
          echo ${{ secrets.DOCKER_PASS }} | docker login --username ${{ secrets.DOCKER_USER }} --password-stdin
          docker push bluebrain/nexus-kg:latest
      - name: RecordCoverage
        run: sbt clean coverage test coverageReport coverageAggregate
      - name: PublishCoverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
  release:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    env:
      CI: true
      BINTRAY_USER: ${{ secrets.BINTRAY_USER }}
      BINTRAY_PASS: ${{ secrets.BINTRAY_PASS }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: SetupSbt
        uses: olafurpg/setup-scala@v5
        with:
          java-version: adopt@1.11
      - name: SetVersion
        run: echo ::set-env name=VERSION::$(echo ${GITHUB_REF:11})
      - name: PublishToBintray
        run: sbt releaseEarly
      - name: PublishToDockerHub
        run: |
          sbt ";set Docker/version := \"${{ env.VERSION }}\"; docker:publishLocal"
          echo ${{ secrets.DOCKER_PASS }} | docker login --username ${{ secrets.DOCKER_USER }} --password-stdin
          docker push bluebrain/nexus-kg:${{ env.VERSION }}
      - name: RecordCoverage
        run: sbt clean coverage test coverageReport coverageAggregate
      - name: PublishCoverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
