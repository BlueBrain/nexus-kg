cassandra.primary-contact-point = "127.0.0.1:9042"
cassandra.primary-contact-point = ${?CASSANDRA_CONTACT_POINT1}

cassandra-journal {
  contact-points = []
  contact-points += ${cassandra.primary-contact-point}
  contact-points += ${?CASSANDRA_CONTACT_POINT2}
  contact-points += ${?CASSANDRA_CONTACT_POINT3}

  keyspace = ${app.description.name}
  keyspace = ${?CASSANDRA_KEYSPACE}

  authentication.username = ${?CASSANDRA_USERNAME}
  authentication.password = ${?CASSANDRA_PASSWORD}

  event-adapters {
    tagging = "ch.epfl.bluebrain.nexus.kg.persistence.TaggingAdapter"
  }
  event-adapter-bindings {
    "ch.epfl.bluebrain.nexus.kg.resources.Event" = tagging
  }

  pubsub-notification = on
  pubsub-notification = ${?CASSANDRA_PUB_SUB_NOTIFICATION}

  events-by-tag {
    # Tagged events are written to a separate Cassandra table in unlogged batches
    # Max size of these batches. The best value for this will depend on the size of
    # the serialized events. Cassandra logs a warning for batches above a certain
    # size and this should be reduced if that warning is seen.
    max-message-batch-size = 60
    max-message-batch-size = ${?CASSANDRA_TAGS_MAX_BATCH_SIZE}

    # Max time to buffer events for before writing.
    # Larger valeues will increase cassandra write efficiency but increase the delay before
    # seeing events in EventsByTag queries.
    # Setting this to 0 means that tag writes will get written immediately but will still be asynchronous
    # with respect to the PersistentActor's persist call. However, this will be very bad for throughput.
    flush-interval = 250ms
    flush-interval = ${?CASSANDRA_TAGS_FLUSH_INTERVAL}

    # Update the tag_scanning table with this interval. Shouldn't be done too often to
    # avoid unecessary load. The tag_scanning table keeps track of a starting point for tag
    # scanning during recovery of persistent actor.
    scanning-flush-interval = 30s
    scanning-flush-interval = ${?CASSANDRA_TAGS_SCANNING_FLUSH_INTERVAL}
  }
}

cassandra-snapshot-store {
  contact-points = []
  contact-points += ${cassandra.primary-contact-point}
  contact-points += ${?CASSANDRA_CONTACT_POINT2}
  contact-points += ${?CASSANDRA_CONTACT_POINT3}

  keyspace = ${cassandra-journal.keyspace}"_snapshot"

  authentication.username = ${?CASSANDRA_USERNAME}
  authentication.password = ${?CASSANDRA_PASSWORD}
}

cassandra-query-journal {
  refresh-interval = 5s
  refresh-interval = ${?CASSANDRA_REFRESH_INTERVAL}

  first-time-bucket = "20181213T00:00"
  first-time-bucket = ${?CASSANDRA_FIRST_TIME_BUCKET}

  events-by-tag {
    # This delay helps to order events. Setting this to anything lower than 2s is highly discouraged.
    eventual-consistency-delay = 4s
    eventual-consistency-delay = ${?CASSANDRA_EVENTUAL_CONSISTENCY_DELAY}
  }
}