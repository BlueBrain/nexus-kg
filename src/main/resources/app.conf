# All application specific configuration should reside here
app {
  # The service description namespace
  description {
    # The name of the service
    name = "kg"
  }

  # Service instance specific settings
  instance {
    # The default interface to bind to
    interface = 127.0.0.1
    interface = ${?BIND_INTERFACE}
  }

  # Http binding settings
  http {
    # The interface to bind to
    interface = ${app.instance.interface}
    # The port to bind to
    port = 8080
    port = ${?BIND_PORT}
    # The default uri prefix
    prefix = "v1"
    prefix = ${?HTTP_PREFIX}
    # The service public uri
    public-uri = "http://"${app.http.interface}":"${app.http.port}
    public-uri = ${?PUBLIC_URI}
  }

  # Service runtime settings
  runtime {
    # Arbitrary Future completion timeout
    default-timeout = 30 seconds
  }

  # Cluster specific settings
  cluster {
    # Duration after which actors are shutdown if they have no interaction
    passivation-timeout = 2 seconds
    passivation-timeout = ${?PASSIVATION_TIMEOUT}
    # Timeout for requests to the distributed data
    replication-timeout = 5 seconds
    replication-timeout = ${?REPLICATION_TIMEOUT}
    # Total number of shards in the cluster
    shards = 30
    shards = ${?SHARDS}
    # The seeds to use for joining a cluster.  Should not contain the self address.
    # Example: 127.0.0.1:2552,127.0.0.2:2552,127.0.0.3:2552
    seeds = ${?SEED_NODES}
  }

  # Persistence specific settings
  persistence {
    journal-plugin = "cassandra-journal"
    snapshot-store-plugin = "cassandra-snapshot-store"
    query-journal-plugin = "cassandra-query-journal"
  }

  # Instance attachments specific settings
  attachments {
    volume = "/tmp"
    volume = ${?VOLUME_PATH}
    digest-algorithm = "SHA-256"
    digest-algorithm = ${?DIGEST_ALGORITHM}
  }

  # Nexus-admin settings
  admin {
    # The base URI to the admin service
    base-uri = "http://localhost:8080/admin"
    base-uri = ${?ADMIN_BASE_URI}
  }

  iam {
    # IAM base URI endpoint
    base-uri = "http://localhost:8080/iam"
    base-uri = ${?IAM_BASEURI}

    # The service account token to execute calls to IAM
    service-account-token = ${?IAM_SA_TOKEN}

    # The maximum tolerated inactivity period after which the cached ACLs will be refreshed
    cache-refresh-interval = 10 seconds
    cache-refresh-interval = ${?IAM_CACHE_REFRESH_INTERVAL}
  }

  # Sparql endpoint specific settings
  sparql {
    # The base uri to the sparql http endpoint
    base = "http://localhost:9999/bigdata"
    base = ${?SPARQL_BASE_URI}

    # The optional basic auth credentials to access the endpoint
    username = ${?SPARQL_USERNAME}
    password = ${?SPARQL_PASSWORD}

    # Sparql default index
    default-index = "kg"
  }

  # ElasticSearch endpoint specific settings
  elastic {
    # The base uri to the ElasticSearch http endpoint
    base = "http://localhost:9200"
    base = ${?ELASTIC_BASE_URI}

    # Index prefix (namespace) for indexing
    index-prefix = "kg"
    index-prefix = ${?ELASTIC_PREFIX_INDEX}

    # ElasticSearch type
    doc-type = "doc"

    # ElasticSearch default index
    default-index = "kg_default"
  }

  # Default pagination information
  pagination {
    # Page offset
    from = 0
    # Default page size
    size = 20
    size = ${?PAGINATION_DEFAULT_SIZE}
    # Maximum page size allowed
    size-limit = 100
    size-limit = ${?PAGINATION_MAX_SIZE}
  }

  # Kafka topics
  kafka {
    admin-topic = "admin-events"
    migration {
      enabled = false
      enabled = ${?MIGRATION_ENABLED}
      topic = "v0-events"
      topic = ${?MIGRATION_TOPIC}
      base-uri = "http://bbp-nexus.epfl.ch/staging/v0/"
      base-uri = ${?MIGRATION_BASE_URI}
      project-ref = "bbp/v0"
      project-ref = ${?MIGRATION_TARGET_PROJECT}
      pattern = "bbp/.*"
      pattern = ${?MIGRATION_PATTERN}
    }
  }

  indexing {

    # Maximum number of events taken on each batch
    batch = 10
    batch = ${?INDEXING_BATCH}

    # Maximum amount of time to wait for the number of events to be taken on each batch
    batch-timeout = 400 millis
    batch-timeout  = ${?INDEXING_BATCH_TIMEOUT}


    retry {
      # The maximum number of times an index function is retried
      max-count = 10
      max-count  = ${?INDEXING_RETRY_MAX}

      # The maximum amount of time to wait between two retries
      max-duration = 20 seconds

      # The jitter added between retries
      random-factor = 0.2
    }

  }

}